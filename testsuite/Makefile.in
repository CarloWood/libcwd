NODEBUGCHECK = nodebug
TSTCHECK = alloctag basic bfd cf continued dc demangler dlopen do flush leak lockable_auto_ptr magic marker strdup test_delete type_info undef

srcdir = @srcdir@
top_builddir = ..
distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
subdir = testsuite
VPATH = @srcdir@
SHELL = @SHELL@

CXX = @CXX@
EXTRAOPTS = @EXTRAOPTS@
DEBUGOPTS = @DEBUGOPTS@
WARNOPTS = @WARNOPTS@
DEFS = -DHAVE_CONFIG_H -DCWDEBUG
CXXFLAGS = $(DEBUGOPTS) $(EXTRAOPTS) $(WARNOPTS)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
SHAREDLIBS = -L$(top_builddir)/.libs -lcwd @LIBS@ -Wl,--rpath,$(top_builddir)/.libs
STATICLIBS = $(top_builddir)/.libs/libcwd.a @LIBS@
enable_shared = @enable_shared@
enable_static = @enable_static@
INCLUDES = -Ilibcwd.tst -I- -I$(top_builddir)/include -I$(srcdir)/../include
PACKAGE = @PACKAGE@
VERSION = @VERSION@
DISTFILES = Makefile.in config lib libcwd.tst libcwd.nodebug

ifeq ($(enable_shared), yes)
SHAREDTSTTARGETS := $(patsubst %,tst_%_shared,$(TSTCHECK))
SHAREDNODEBUGTARGETS := $(patsubst %,nodebug_%_shared,$(NODEBUGCHECK))
else
SHAREDTSTTARGETS :=
SHAREDNODEBUGTARGETS :=
endif

ifeq ($(enable_static), yes)
STATICTSTTARGETS := $(patsubst %,tst_%_static,$(TSTCHECK))
STATICNODEBUGTARGETS := $(patsubst %,nodebug_%_static,$(NODEBUGCHECK))
else
STATICTSTTARGETS :=
STATICNODEBUGTARGETS :=
endif

CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
CXXLINK = $(CXX) $(CXXFLAGS) $(LDFLAGS)

RUNTEST = runtest
RUNTESTFLAGS = -a
FLAGS_TO_PASS =

all:
info install-info clean-info dvi install etags tags installcheck:

site.exp: Makefile
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp
	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "set compiler \"$(CXX)\"" >> ./tmp0
	@echo "set tool libcwd" >> ./tmp0
	@echo "set srcdir $(srcdir)" >> ./tmp0
	@test "$(enable_shared)" != "yes" || echo "set SHAREDLIBS \"$(SHAREDLIBS)\"" >> ./tmp0
	@test "$(enable_shared)" != "no" || echo "set SHAREDLIBS \"\"" >> ./tmp0
	@test "$(enable_static)" != "yes" || echo "set STATICLIBS \"$(STATICLIBS)\"" >> ./tmp0
	@test "$(enable_static)" != "no" || echo "set STATICLIBS \"\"" >> ./tmp0
	@echo "set OPTIONS \"$(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS)\"" >> ./tmp0
	@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
	@cat ./tmp0 > site.exp
	@cat site.bak | sed -e '1,/^## All variables above are.*##/ d' >> site.exp
	-@rm -f ./tmp?

check: site.exp module.so
	$(RUNTEST) $(RUNTESTFLAGS) $(FLAGS_TO_PASS)

module.so: module.cc
	$(CXXCOMPILE) -shared -fpic -DPIC -w $< -o $@

# Provide rules for manual compilation:
tst_%.o: libcwd.tst/%.cc Makefile $(top_builddir)/include/libcw/*.h
	$(CXXCOMPILE) -c $< -o $@

nodebug_%.o: libcwd.nodebug/%.cc Makefile $(top_builddir)/include/libcw/*.h
	$(CXXCOMPILE) -c $< -o $@

ifeq ($(enable_shared), yes)
%_shared: %.o $(top_builddir)/.libs/libcwd.so.*
	$(CXXLINK) $< -o $@ $(SHAREDLIBS)
endif

ifeq ($(enable_static), yes)
%_static: %.o $(top_builddir)/.libs/libcwd.a
	$(CXXLINK) $< -o $@ $(STATICLIBS)
endif

shared: $(SHAREDTSTTARGETS) $(SHAREDNODEBUGTARGETS)
static: $(STATICTSTTARGETS) $(STATICNODEBUGTARGETS)

run: shared static module.so
	@for i in $(SHAREDTSTTARGETS) $(SHAREDNODEBUGTARGETS) $(STATICTSTTARGETS) $(STATICNODEBUGTARGETS); do echo -n "$$i: "; if $$i 2>/dev/null >/dev/null; then echo "OK"; else echo "ERROR"; fi ; done

# Clean rules
mostlyclean:
	rm -f site.bak core *.core *.o
clean: mostlyclean
	rm -f libcwd.log libcwd.sum *_*_shared *_*_static module.so
distclean: clean
	rm -f Makefile site.exp *.log *.sum

distdir: $(DISTFILES)
	distdir=`cd $(distdir) && pwd`;
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

# Uninstall rule
uninstall:

# Maintainer rules
maintainer-clean realclean: distclean

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && CONFIG_FILES=testsuite/Makefile CONFIG_HEADERS= $(SHELL) ./config.status
