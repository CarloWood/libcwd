Quick start
===========

./configure --prefix=/usr
make
make install

If that doesn't work, mail me: libcw@alinoe.com
(include as much details as possible).


Needed tools
============

Check if you have all GNU tools/libraries/packages that libcwd depends on:

     Primary site:
     ftp://ftp.gnu.org/gnu/

     List of mirrors:
     http://www.gnu.org/order/ftp.html

     Packages/versions needed
     ------------------------

     i) gnu/gcc/gcc-2.95.1.tar.gz	or higher.

     Alternatively you can install only
     ia) gnu/gcc/gcc-core-2.95.1.tar.gz	or higher and
     ib) gnu/gcc/gcc-g++-2.95.1.tar.gz	or higher.
     
     Note: It is very unlikely that you want to install
     the source tree of gcc/g++.  Please try to upgrade your
     compiler the usual way if needed.
     If you are using rpm's then you will need to
     install/upgrade to following: gcc (2.95.1 or higher),
     gcc-c++ (of same version), libstdc++ (of same version),
     cpp (of same version).  Check your installation on
     RedHat with: rpm -qa | egrep '(gcc|libstdc|cpp)'

     Note: If you don't use rpm's but are using tar balls,
     then you do NOT need to download gnu/libstdc++/* because
     gcc-2.95 and higher comes with libstdc++ included.
     The gnu/libstdc++/ directory on GNU ftp sites are
     for older compilers.  You also don't need libg++.
     Don't delete those libraries if you have them though,
     existing binaries might need to link with them.

     ii) gnu/binutils/binutils-2.9.tar.gz	or higher.

     (If you have any troubles on linux with binutils,
      then first try upgrading to binutils-2.10.0.18.
      You can download this from
ftp://ftp.valinux.com/pub/support/hjl/binutils/binutils-2.10.0.18.tar.gz
      If that solves your problem, please let me know: libcwd
      should work with binutils-2.9 but I never thoughroughly
      tested it and would like to know which version gives a
      problem, if any.)

  libcwd-0.99.0 was tested with gcc-2.95.1 and gcc-ss-20000402.
  libcwd-0.99.1
    through
  libcwd-0.99.3 were tested with gcc-2.95.2 and gcc-ss-20000813.
  libcwd-0.99.3 was also tested with gcc-ss-20000724 on linux/RH6.9.


Hackers info
============

-=i=-

`configure' has a few interesting options.  You can list them by issuing:

./configure --help

There is no reason to use libcwd's feature options (--disable-libcwd-alloc,
--disable-libcwd-magic, --disable-libcwd-marker and --disable-libcwd-bfd).
Actually, I forgot why they are there :).  You can read more about what
they do in Chapter 4 "Debugging compile options" here:
http://libcw.sourceforge.net/templates/index.html?debugging
If you want to change Makefile.am files and the-like then you'll need to
use --enable-maintainer-mode.  If you enable maintainer-mode then you
will need GNU make, other make won't work (you also need a lot of other
extra tools installed on your system).

-=ii=-

The configure script looks for a GNU C++ compiler version 2.95.1 or higher.
If it can't find one (it will only find one when there is a g++ or c++ in
your PATH), then you can specify the right path during configuration.
For example, I configure libcwd as follows to compile with the latest CVS
version of g++, which I installed in /usr/local/bin/g++-cvs (and
/usr/local/bin is in my PATH):

CXX="g++-cvs" ./configure

If libiberty.a or libbfd.so are in an unusual directory, then you
will have to set LDFLAGS prior to running ./configure:

LDFLAGS="-L/usr/gnu/lib" CPPFLAGS="-I/usr/gnu/include" ./configure

-=iii=-

You can install libcwd in a `staging' directory by issuing

make DESTDIR=/tmp/staging install

this can come in handy when you want to build an rpm for instance.

-=iv=-

The Makefile has the following targets:

make [all-recursive]
make install
make uninstall
make clean
make distclean

If you feel brave you might even want to try

make dist
make maintainer-clean

well, ... heh.  Look in the Makefile for more targets ;)

-=v=-

Finally, you can also build libcwd in a different directory than the source
tree is in:

tar xzf libcwd-0.99.3.tar.gz
mkdir libcwd-objdir
cd libcwd-objdir
../libcwd-0.99.3/configure --prefix=/usr
make
su
make install

that way your source tree stays completely distclean :)
