dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision$)dnl

dnl General intialization of `autoconf' varaibles.
dnl Ensure that the directory specified with --srcdir was correct
dnl by demanding that it contains `debugmalloc.cc'.
AC_INIT(debugmalloc.cc)

dnl Include maintainer mode targets
AM_MAINTAINER_MODE

dnl Put resulting configuration defines in this header file.
AM_CONFIG_HEADER(config.h)

dnl Demand at least version 2.13 of autoconf.
AC_PREREQ(2.13)

dnl Version info
dnl
dnl INTERFACE_VERSION		: Current interface version, increment whenever the interface is changed.
dnl INTERFACE_VERSION_REVISION	: Revision, increment every public release; or set to 0 when the interface is changed.
dnl INTERFACE_AGE		: Increment if interfaces have been added; or set to 0 when interfaces have been removed.

INTERFACE_VERSION=99		dnl 0.99 actually
INTERFACE_VERSION_REVISION=3
INTERFACE_AGE=99		dnl 0.99 actually

VERSION_MAJOR=$(($INTERFACE_VERSION-$INTERFACE_AGE))
VERSION_MINOR=$INTERFACE_AGE
VERSION_REVISION=$INTERFACE_VERSION_REVISION

dnl Automake package name and version
AM_INIT_AUTOMAKE(libcwd, [$VERSION_MAJOR.$VERSION_MINOR.$VERSION_REVISION])

dnl Libtool version info
VERSIONINFO="$INTERFACE_VERSION:$INTERFACE_VERSION_REVISION:$INTERFACE_AGE"
AC_SUBST(VERSIONINFO)

dnl Choose warning options to use
if test "$USE_MAINTAINER_MODE" = yes; then
WARNOPTS="-Wall -Woverloaded-virtual -Wundef -Wpointer-arith -Winline -Wwrite-strings -Werror"
else
WARNOPTS=
fi
AC_SUBST(WARNOPTS)

dnl Stop automake from adding the `-I. -I. -I.' nonsense
AC_SUBST(DEFS)

dnl Find out which debugging options we need
AC_CANONICAL_HOST
case "$host" in
  *freebsd*) DEBUGOPTS=-ggdb ;;	dnl FreeBSD needs -ggdb to include sourcefile:linenumber info in its object files.
  *) DEBUGOPTS=-g ;;
esac
AC_SUBST(DEBUGOPTS)

dnl Other options
EXTRAOPTS="-fno-exceptions -pipe"
AC_SUBST(EXTRAOPTS)

dnl Manual configuration options of libcwd.
AC_ARG_ENABLE(libcwd,
[Options of package libcwd:])

libcwd_config_alloc=yes
AC_ARG_ENABLE(libcwd-alloc,
    [  --disable-libcwd-alloc  disable memory allocation debugging support.],
    libcwd_config_alloc=$enableval)

libcwd_config_magic=yes
AC_ARG_ENABLE(libcwd-magic,
    [  --disable-libcwd-magic  disable magic numbers in memory allocation debugging.],
    libcwd_config_magic=$enableval)

libcwd_config_marker=yes
AC_ARG_ENABLE(libcwd-marker,
    [  --disable-libcwd-marker disable memory allocation markers.],
    libcwd_config_marker=$enableval)

libcwd_config_bfd=yes
AC_ARG_ENABLE(libcwd-bfd,
    [  --disable-libcwd-bfd    do not try to find and use the bfd library,
                          this will disable sourcefile:linenumber support.],
    libcwd_config_bfd=$enableval)

libcwd_config_debug=no
AC_ARG_ENABLE(libcwd-debug,
    [  --enable-libcwd-debug   enable debugging of libcwd itself.],
    libcwd_config_debug=$enableval)

libcwd_config_debugm=no
AC_ARG_ENABLE(libcwd-debugm,
    [  --enable-libcwd-debugm  enable debugging of memory allocation debugging code
                          in libcwd itself.],
    libcwd_config_debugm=$enableval)

dnl Restore the environment variables used when running `configure' when
dnl `config.status --recheck' was invoked.
if test x"$no_create" = xyes -a x"$no_recursion" = xyes; then
  eval "CPPFLAGS=\"$cw_cv_sys_CPPFLAGS\""
  eval "CXXFLAGS=\"$cw_cv_sys_CXXFLAGS\""
  eval "LDFLAGS=\"$cw_cv_sys_LDFLAGS\""
  eval "LIBS=\"$cw_cv_sys_LIBS\""
fi

dnl Always let these environment variables override cached values
if test x"$CXX" != "x" -o x"$CXXCPP" != "x"; then
  unset ac_cv_prog_CXX
  unset ac_cv_prog_CXXCPP
  unset ac_cv_prog_cxx_cross
  unset ac_cv_prog_cxx_works
  unset ac_cv_prog_gxx
  unset ac_cv_prog_gxx_version
fi

dnl Check for compiler and preprocessor
CW_PROG_CXX
CW_PROG_CXXCPP

dnl Clear the cache values of all remaining tests if important
dnl environment variables have been changed since last run.
AC_MSG_CHECKING([if we can use cached result for the tests])
CW_PROG_CXX_FINGER_PRINTS
if test "$cw_cv_sys_CXX_finger_print" != "$cw_prog_cxx_finger_print" -o \
        "$cw_cv_sys_CXXCPP_finger_print" != "$cw_prog_cxxcpp_finger_print" -o \
	"$cw_cv_sys_CPPFLAGS" != "$CPPFLAGS" -o \
	"$cw_cv_sys_CXXFLAGS" != "$CXXFLAGS" -o \
	"$cw_cv_sys_LDFLAGS" != "$LDFLAGS" -o \
	"$cw_cv_sys_LIBS" != "$LIBS"; then
changequote(<<, >>)dnl
for i in `set | grep -v '^ac_cv_prog_[Ccg][Xx]' | grep '^[a-z]*_cv_' | sed -e 's/=.*$//'`; do
  unset $i
done
changequote([, ])dnl
AC_MSG_RESULT([no])
else
AC_MSG_RESULT([yes])
fi
dnl Store important environment variables in the cache file
cw_cv_sys_CXX_finger_print="$cw_prog_cxx_finger_print"
cw_cv_sys_CXXCPP_finger_print="$cw_prog_cxxcpp_finger_print"
cw_cv_sys_CPPFLAGS="$CPPFLAGS"
cw_cv_sys_CXXFLAGS="$CXXFLAGS"
cw_cv_sys_LDFLAGS="$LDFLAGS"
cw_cv_sys_LIBS="$LIBS"

dnl Checks for other programs.
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl We need to use these options for the tests too
CXXFLAGS="$DEBUGOPTS $EXTRAOPTS"

dnl Set language requirements for the tests below.
AC_LANG_CPLUSPLUS
AC_REQUIRE_CPP

dnl Disable building static libraries by default
AC_DISABLE_STATIC
AM_PROG_LIBTOOL

dnl Configuration defines of debug_config.h
AC_SUBST(CW_CONFIG_DEBUGMALLOC)
CW_CONFIG_DEBUGMALLOC=undef
AC_SUBST(CW_CONFIG_DEBUGMAGICMALLOC)
CW_CONFIG_DEBUGMAGICMALLOC=undef
AC_SUBST(CW_CONFIG_DEBUGUSEBFD)
CW_CONFIG_DEBUGUSEBFD=undef
AC_SUBST(CW_CONFIG_DEBUGDEBUG)
CW_CONFIG_DEBUGDEBUG=undef
AC_SUBST(CW_CONFIG_DEBUGDEBUGMALLOC)
CW_CONFIG_DEBUGDEBUGMALLOC=undef
AC_SUBST(CW_CONFIG_DEBUGMARKER)
CW_CONFIG_DEBUGMARKER=undef

if test "$libcwd_config_alloc" = yes; then
  CW_CONFIG_DEBUGMALLOC=define
fi

if test "$libcwd_config_magic" = yes; then
  CW_CONFIG_DEBUGMAGICMALLOC=define
fi

if test "$libcwd_config_bfd" = yes; then

  dnl Checks for libraries.
  save_LIBS=$LIBS

  dnl Check if we have `xmalloc' in libiberty.a
  AC_CHECK_LIB(iberty, xmalloc,,
      [dnl If that failed, try linking with -ldl:
      unset ac_cv_lib_iberty_xmalloc
      AC_CHECK_LIB(iberty, xmalloc, [LIBS="-liberty -ldl $LIBS"],, -ldl)])

  dnl Check if we have `bfd_init' in -lbfd
  AC_CHECK_LIB(bfd, bfd_init,,
      [dnl If that failed, try linking with -lintl:
      unset ac_cv_lib_bfd_bfd_init
      AC_CHECK_LIB(bfd, bfd_init, [LIBS="-lbfd -lintl $LIBS"],, -lintl)])

  dnl If both succeeded, then enable DEBUGUSEBFD
  if test "$ac_cv_lib_iberty_xmalloc" != "no" -a "$ac_cv_lib_bfd_bfd_init" != "no"; then
    AC_CHECK_HEADER(bfd.h,
      [CW_CONFIG_DEBUGUSEBFD=define],
      [AC_MSG_WARN([You have libbfd, but I cannot find bfd.h!?  Look up of function names and source:line information will be disabled.])])
  else
    AC_MSG_WARN([
* Cannot find a working libbfd;  Lookup of function names and source:line
* information will be disabled.  Perhaps you need to add -L/path to LDFLAGS?
* Please read INSTALL for more info.
])
  fi

fi

if test "$libcwd_config_debug" = yes; then
  CW_CONFIG_DEBUGDEBUG=define
fi

if test "$libcwd_config_debugm" = yes; then
  CW_CONFIG_DEBUGDEBUGMALLOC=define
fi

if test "$libcwd_config_marker" = yes; then
  CW_CONFIG_DEBUGMARKER=define
fi

dnl Checks for header files.
AC_HEADER_STAT

dnl Check for typedefs.
AC_TYPE_SIGNAL
CW_DEFINE_TYPE(retsig_t, [$ac_cv_type_signal])
CW_TYPE_SOCKLEN_T
CW_TYPE_OPTVAL_T
CW_TYPE_SIGHANDLER_PARAM_T
if test "$ac_cv_type_signal" = "int"; then
  AC_DEFINE_UNQUOTED([CW_RETSIGTYPE_IS_INT])
fi
AC_TYPE_UID_T
CW_TYPE_GETGROUPS

dnl Check for structures.

dnl Check for compiler/system characteristics.
CW_BUG_20000813
CW_BUG_REDEFINES([sys/resource.h])
CW_MALLOC_OVERHEAD
CW_NEED_WORD_ALIGNMENT
CW_NBLOCK

dnl Check for library functions.
AC_CHECK_FUNCS(getgid getegid getgroups)

dnl Check for system services.

dnl Set up build directory
test ! -d include && mkdir include

dnl Set up rpm directory when in maintainer mode
SPECCHANGELOG=spec.changelog
if test "$USE_MAINTAINER_MODE" = yes; then
  AC_SUBST_FILE(SPECCHANGELOG)
  LSMFILE="$PACKAGE.lsm"
  AC_SUBST(LSMFILE)
  SPECFILE="$PACKAGE.spec"
  AC_SUBST(SPECFILE)
  top_builddir="`pwd`"
  test -d rpm || mkdir rpm
  cd rpm
  test -d BUILD || mkdir BUILD
  test -d SOURCES || mkdir SOURCES
  test -d SRPMS || mkdir SRPMS
  test -d RPMS || mkdir RPMS
  cd RPMS
  TARGET=i386
  AC_SUBST(TARGET)
  test -d $TARGET || mkdir $TARGET
  cd ..
  echo "%_require_vendor 1" > macros
  echo "%_require_distribution 1" >> macros
  echo "%_distribution http://sourceforge.net/project/showfiles.php?group_id=354" >> macros
  echo "%vendor Carlo Wood" >> macros
  echo "%_topdir "$top_builddir"/rpm" >> macros
  echo "%_pgp_path "$PGPPATH >> macros
  echo "%_signature pgp5" >> macros
  echo "%_pgp_name carlo@alinoe.com" >> macros
  echo "macrofiles: /usr/lib/rpm/macros:"$top_builddir"/rpm/macros" > rpmrc
  echo "buildarchtranslate: i686: i386" >> rpmrc
  cd ..
fi

AC_OUTPUT_COMMANDS([$MAKE -C include/libcw debug_config.h sys.h], [MAKE="${MAKE-make}"])

CW_OUTPUT(Makefile maintMakefile include/Makefile include/libcw/Makefile tests/Makefile utils/Makefile include/libcw/debug_config.ho include/libcw/sys.ho)
exit 0

dnl Keep automake happy
AC_OUTPUT(Makefile maintMakefile include/Makefile include/libcw/Makefile tests/Makefile utils/Makefile include/libcw/debug_config.ho include/libcw/sys.ho)
