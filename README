Introduction
------------

Libcwd is for use by developers while still developing: end
applications don't need it.  While still developing, you
will compile with -DCWDEBUG and link with -lcwd (and add its
install path to LD_LIBRARY_PATH).  A production version is then
simply compiled without -DCWDEBUG and not linked with -lcwd.

The library cannot be linked with static libraries (because
those are not compiled with -fPIC) therefore libtool drops
any inter-library dependency if you only have a static
library installed and will print something like:

 *** Warning: This library needs some functionality provided by -liberty.
 *** I have the capability to make that library automatically link in when
 *** you link to this library.  But I can only do this if you have a
 *** shared version of the library, which you do not appear to have.

If this happens, then this means that you will need to
link your programs with -lcwd -lbfd -liberty, rather than
just -lcwd.

The directory `example-project' contains a fully functional
example project that uses autoconf, automake and libcwd.
Please read example-project/README for more info and a little
tutorial on the automake build environment.  For the example
project to work, you *first* need to install libcwd.

Please read the INSTALL file for a list of other needed
libraries and tools before attempting to compile libcwd.

The debug support can be divided into the following components:

1) Support for Object Oriented debug output (using ostream and
   debug objects for `channels' and `devices').
2) Support for memory allocation debugging.


Documentation
-------------

You can find extensive documentation online at
http://libcw.sourceforge.net/debugging/.  There you will find
a reference manual, a tutorial and many examples.

It is highly recommended that you download and install the html
files locally for greater speed.  At the moment you can only
download the documentation by using `cvs':

Install cvs (after all, you are a developer) and issue the
following command once:

cvs -d:pserver:anonymous@cvs.libcw.sourceforge.net:/cvsroot/libcw login

When prompted for a password for anonymous, simply press the
Enter key.  Next download the documentation with the following
commandline:

cvs -z3 -d:pserver:anonymous@cvs.libcw.sourceforge.net:/cvsroot/libcw co www

At any later time you can update the documentation by changing
directory into the www directory and issuing:

cvs update

A European mirror has been setup in Amsterdam (the Netherlands) at
http://www.alinoe.com/.  This is my home PC (cable, 128cps) and
therefore only contains the front page, using www.xs4all.nl
(my other provider) for all the rest of the pages and images.
Feel free to try this when sourceforge is too slow.

Note that the documentation includes documentation of libcw
(without a `d' at the end), libcw is not released to the public
yet.  You can ignore everything not in the debugging/ directory.


Anonymous CVS Access 
--------------------

This project's SourceForge CVS repository can be checked out through anonymous
(pserver) CVS with the following instruction set.  The module of libcwd is called
"libcwd" (not "libcw" !).  When prompted for a password for anonymous, simply
press the Enter key. 

cvs -d:pserver:anonymous@cvs.libcw.sourceforge.net:/cvsroot/libcw login 

cvs -z3 -d:pserver:anonymous@cvs.libcw.sourceforge.net:/cvsroot/libcw co libcwd

Updates from within the module's directory do not need the -d parameter.

