#=============================================================================
#
# Maintainer stuff, you don't want to mess with this.
#
# In order to use this as-is, you'll need the following utilities:
#
# GNU make
# GNU which-2.x
# GNU date
# awk
# rcs2log
# cut
# grep
# egrep
# test
# sed
#
# This maintainer Makefile provides the following functionality:
#
# Targets
# -------
#
# - debian
#       Create a debian package.
#
# - full-check
#	Iterate over multiple configurations and compiler versions,
#	running the test suite for every combination.
#
# - documentation
#	Does a `make' in doc/.
#
# The remaining targets can be used to test a part of the distribution process,
# but are not really useful on their own otherwise.
#
# - test-values
#	Print debugging info about variables used in this file.
#

TARGET=@TARGET@
SPECFILE=@SPECFILE@
LSMFILE=@LSMFILE@
REL=1
TAG:=${shell echo "V@VERSION@" | sed -e 's/\./_/g'}
PREVTAG:=${shell test -f .prevtag && cat .prevtag}
AWK=@AWK@

BUILT_SOURCES =

test-values:
	@echo "srcdir	= \"$(srcdir)\""
	@echo "PACKAGE  = \"@PACKAGE@\""
	@echo "VERSION  = \"@VERSION@\""
	@echo "SPECFILE = \"$(SPECFILE)\""
	@echo "TARGET   = \"$(TARGET)\""
	@echo "REL      = \"$(REL)\""
	@echo "TAG      = \"$(TAG)\""
	@echo "PREVTAG  = \"$(PREVTAG)\""

## Make sure the ChangeLog is up to date in maintainer mode
.PHONY: ChangeLog documentation debian @PACKAGE@-@VERSION@.tar.gz

@PACKAGE@-@VERSION@.tar.gz:
	RESULT=ok; \
	for f in $$(tar tzf @PACKAGE@-@VERSION@.tar.gz | sed -e 's%^[^/]*/%%'); do \
	  test -e ../libcwd/$$f && test ../libcwd/$$f -nt @PACKAGE@-@VERSION@.tar.gz && echo 'WARNING: '$$f' is newer than @PACKAGE@-@VERSION@.tar.gz!' && RESULT=error; \
	done; \
	if test "$$RESULT" != "ok"; then \
	  echo "You must run: $(MAKE) dist"; \
	  exit -1; \
	fi

debian: @PACKAGE@-@VERSION@.tar.gz
	VER="$$(dpkg-parsechangelog -l$(srcdir)/debian/changelog | sed -n -e 's/-.*//;s/^Version: //p')"; \
	if test "$$VER" != "@VERSION@"; then \
	  echo "The version in debian/changelog ($$VER) does not match @VERSION@." \
	  echo "Run (cd $(srcdir) && dch -v @VERSION@-1 && dch -r) and rebuild the tar ball!"; \
	  exit 1; \
	fi
	rm -rf debian-build
	mkdir debian-build
	cd debian-build; \
	tar xzf ../@PACKAGE@-@VERSION@.tar.gz; \
	tar czf @PACKAGE@_@VERSION@.orig.tar.gz --exclude debian @PACKAGE@-@VERSION@; \
	cd @PACKAGE@-@VERSION@; \
	dpkg-buildpackage -us -uc; \
	cd ..; \
	lintian @PACKAGE@_@VERSION@-1_amd64.changes

CCVERGIT=6.2.0
CCVERALL=$(CCVERGIT),5.4.0,4.9.4,4.8.5,4.8.0,4.7.4
CCVERMOST=$(CCVERGIT),5.4.0,4.9.4,4.8.0,4.7.4

#		'--enable-maintainer-mode --with-redzone=1024 --compilers=$(CCVERGIT)' \
#		'--enable-maintainer-mode --compilers=$(CCVERALL)' \
#		'--enable-maintainer-mode --enable-debugt --enable-debugm --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode --enable-debugt                 --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode                 --enable-debugm --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode                                 --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode                 --enable-debugm                                       --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode --enable-debugt --enable-debugm --enable-debug                        --compilers=$(CCVERMOST)' \
#		'--enable-maintainer-mode                 --enable-debugm --enable-debug                        --compilers=$(CCVERMOST)' \

full-check: Makefile
	@( \
	  for c in \
		'--enable-maintainer-mode --with-redzone=1024 --compilers=$(CCVERGIT)' \
		'--enable-maintainer-mode --compilers=$(CCVERALL)' \
		'--enable-maintainer-mode --enable-debugt --enable-debugm --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode --enable-debugt                 --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode                 --enable-debugm --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode                                 --enable-debug --disable-debug-output --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode                 --enable-debugm                                       --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode --enable-debugt --enable-debugm --enable-debug                        --compilers=$(CCVERMOST)' \
		'--enable-maintainer-mode                 --enable-debugm --enable-debug                        --compilers=$(CCVERMOST)' \
		; do \
	    config=`echo $$c | sed -e 's/ --compilers=.*$$//'`; \
	    case "$$c" in \
	      *--disable-debug-output*) check=check ;; \
	      *--enable-debug\ *) check=run ;; \
	      *) check=check ;; \
	    esac; \
	    compilers=`echo $$c | sed -e 's/.* --compilers=//' -e 's/,/ /g'`; \
	    test -z "$$COMPILERS" || compilers="$$COMPILERS"; \
	    echo "*** CONFIGURATION OPTIONS: \"$$config\" (with compilers \"$$compilers\")"; \
	    for v in `echo $$compilers`; do \
	      case "$$v" in \
	      3*) cf="$$config --disable-threading" ;; \
	      *) cf="$$config" ;; \
	      esac; \
	      echo "*** COMPILER VERSION: \"$$v\""; \
	      echo -n "Configuring... "; \
	      if eval "CC=\"gcc-$$v\" CXX=\"g++-$$v\" $(srcdir)/configure $$cf >/dev/null"; then \
		echo "done"; \
	      else \
	        echo "failed" && exit -1; \
	      fi; \
	      echo -n "Compiling... "; \
	      if make -j 4 >/dev/null; then \
		echo "done"; \
	      else \
		echo "failed" && exit -1; \
	      fi; \
	      cd testsuite >/dev/null; \
	      make clean >/dev/null; \
	      echo -n "Running \`/usr/bin/make RUNTESTFLAGS=\"\" $$check' in $(shell pwd)... "; \
	      if if /usr/bin/make -j1 RUNTESTFLAGS="" $$check 2>/dev/null; then \
	        echo "done"; \
	      else \
		echo "*** FAILURE FOR \"$$cf\" USING g++-$$v" && exit -1; \
	      fi | egrep '(FAIL|ERROR)'; then exit -1; else echo "ok"; fi; \
	      cd .. >/dev/null; \
	    done; \
	  done; \
	)

documentation:
	$(MAKE) -C doc

syncwww: documentation
	@( \
	  if test -n "$(OUTPUT_DIRECTORY)" -a "$(OUTPUT_DIRECTORY)" != "."; then \
	    echo "Copying documentation to $(OUTPUT_DIRECTORY)"; \
	    rsync -rlptz -e /usr/bin/ssh --delete --exclude-from=$(srcdir)/doc/www/exclude --delete-excluded \
		`pwd`/doc/ "$(OUTPUT_DIRECTORY)/libcwd"; \
	  fi \
	)
	@echo "Synchronizing with http://carlowood.github.io..."
	@( \
	  cd $(OUTPUT_DIRECTORY); \
	  git add libcwd; \
	  git commit -m 'Update of documentation of libcwd.'; \
	  git push \
	)

git-clean:
	$(MAKE) -C doc maintainer-clean
	(test -f example-project/Makefile && $(MAKE) -C example-project maintainer-clean) || true
	$(MAKE) maintainer-clean
	for d in doc/tutorial/examples5 doc/tutorial/examples7 doc/tutorial \
		 doc/styles doc/external doc \
		 example-project testsuite tests cutee utils include/libcwd include; do \
	  test ! -d $$d || rmdir --ignore-fail-on-non-empty $$d; \
	done
