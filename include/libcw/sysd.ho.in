// @configure_input@
// $Header$
//
// Copyright (C) 2000 - 2001, by
// 
// Carlo Wood, Run on IRC <carlo@alinoe.com>
// RSA-1024 0x624ACAD5 1997-01-26                    Sign & Encrypt
// Fingerprint16 = 32 EC A7 B6 AC DB 65 A6  F6 F6 55 DD 1C DC FF 61
//
// This file may be distributed under the terms of the Q Public License
// version 1.0 as appearing in the file LICENSE.QPL included in the
// packaging of this file.
//

//
// NOTE:
//
// This header file was generated with the `configure' script of libcwd-@VERSION@
// If you change your system header files (like glibc or kernel header)
// it might be needed to regenerate it.
//

/** \file libcw/sysd.h
 * Do not include this header file directly, instead include a custom \link preparation "sys.h" \endlink.
 */

#ifndef LIBCW_SYSD_H
#define LIBCW_SYSD_H

namespace libcw {
  namespace debug {
    /**
     * \brief Offset to __builtin_return_address() needed to get the correct line number from location_ct.
     *
     * \par Example
     * \code
     * libcw::debug::location_ct loc((char*)__builtin_return_address(0) + libcw::debug::builtin_return_address_offset);
     * \endcode
     */
    int const builtin_return_address_offset = @CW_CONFIG_BUILTIN_RETURN_ADDRESS_OFFSET@;
  }
}

// When to use <strstream> instead of <sstream>.

#if __GNUC__ == 2 && __GNUC_MINOR__ < 97
#define LIBCWD_USE_STRSTREAM
#endif

//
// Compilers and preprocessor used.  Put here to cause a recompile when changed.
// CC    : @CC_FINGER_PRINT@
// CXX   : @CXX_FINGER_PRINT@
// CXXCPP: @CXXCPP_FINGER_PRINT@
//

// Abort when someone tries to use MT with libcwd without MT support.
#@CW_CONFIG_THREAD_SAFE@ LIBCWD_TMP_THREAD_SAFE
#if defined(_REENTRANT) && !defined(LIBCWD_TMP_THREAD_SAFE)
#error "Recompile libcwd with --enable-threading to enable support for Multi-Threading."
#endif

#ifdef LIBCWD_TMP_THREAD_SAFE
// See http://www.cuj.com/experts/1902/alexandr.htm?topic=experts
#define LIBCWD_MT_VOLATILE volatile
#else
#define LIBCWD_MT_VOLATILE
#endif

// Was only needed for the two tests above.
#undef LIBCWD_TMP_THREAD_SAFE

#endif /* LIBCW_SYSD_H */
