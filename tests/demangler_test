# Brute force demangler test.  Compares output with the result of 'c++filt'.

CPPFILT="/usr/src/gcc/gcc-cvs-3.0/libiberty/c++filt"
TESTEXEC="/home/carlo/c++/libcw/src/libcwd/a.out"
TMP=/tmp

if expr $# == 0 >/dev/null; then
  echo "Usage: $0 <object file> [<object file>] ..."
  exit 0
fi

echo "Getting mangled names..."
rm -f $TMP/nm.out; touch $TMP/nm.out
for file in $*; do
  if test -f $file; then
    nm "$file" | grep ' _Z' | sed -e 's/.* _Z/_Z/' >> $TMP/nm.out
  else
    echo "$file: No such file"
    exit -1
  fi
done
echo "Sorting..."
sort $TMP/nm.out | uniq > $TMP/mangled.names
echo "Comparing..."
for i in `cat $TMP/mangled.names`; do
  echo -n "$i : "
  TESTOUT=`$TESTEXEC $i 2>/dev/null | sed -e 's/unsigned int/unsigned/g' -e 's/(void)/()/g' -e 's/\([0-9]\)[ul]*/\1/g'`
  if expr $? != 0 >/dev/null; then
    echo "Non-zero exit status"
    exit -1
  fi
  IN=`echo $i | sed -e 's/\([0-9]\)_S_/\1XXXXXX/g' -e 's/\(S[0-9A-Z]_\)/3\1/g' -e 's/S_/2S_/g' -e 's/\([0-9]\)XXXXXX/\1_S_/g'`
  CPPFILTOUT=`$CPPFILT $i 2>/dev/null | sed -e 's/::__PRETTY_FUNCTION__ const$/ const::__PRETTY_FUNCTION__/' \
      -e 's/^\(.*\) const::\([^(]*\)(\([^)]*\))\(.*\)$/\1::\2(\3) const\4/'`
  if test "$TESTOUT" != "$CPPFILTOUT"; then
    echo "Difference"
    echo "c++filt: \"$CPPFILTOUT\""
    echo "a.out  : \"$TESTOUT\""
    exit -1
  else
    echo "OK"
  fi
done

